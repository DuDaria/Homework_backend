# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]  Результат: [3, 5, 2]

import math

lst = [2, -5, 8, 9, -25, 25, 4]
lst_new = []
for i in lst:
    if i >= 0:
        i = math.sqrt(i)       
        if int(i) == float(i):
            i = int(i)
            lst_new.append(i)
print(lst_new) # Результат: [3, 5, 2]
print("")

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

time = (input("Введите дату в формате dd.mm.yyyy: "))
time = time.split('.')
dd = int(time[0])
mm = int(time[1])
yyyy= int(time[2])

date = ["первое", 
    "второе",
    "третье", 
    "четвертое", 
    "пятое", 
    "шестое", 
    "седьмое", 
    "восьмое",
    "девятое", 
    "десятое",
    "одиннадцатое",
    "двенадцатое",
    "тринадцатое",
    "четырнадцатое",
    "пятнадцатое",
    "шестандцатое",
    "семнадцатое",
    "восемнадцатое",
    "девятнадцатое",
    "двадцатое",
    "двадцать первое",
    "двадцать второе",
    "двадцать третье",
    "двадцать четвертое",
    "двадцать пятое",
    "двадцать шестое",
    "двадцать седьмое",
    "двадцать восьмое",
    "двадцать девятое",
    "тридцатое",
    "тридцать первое",
    ]

month = ["январь",
        "февраль",
        "март",
        "апрель",
        "май",
        "июнь",
        "июль",
        "август",
        "сентябрь",
        "октябрь",
        "ноябрь",
        "декабрь",
        ]

if dd <=31 and mm <=12:
    dd -= 1
    dd = date[dd]
    mm -= 1
    mm = month[mm]
    print(dd, mm, yyyy, "года")
else:
    print("Вы уверенны, что правильно набрали дату?")
    print("Что это было....???")
print("")

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
import random

# Неотсортированный рандомный список
lst_1 = []
for i in range(-100, 101):
    items = random.randint(-100, 101) #-получение случайных чисел
    lst_1.append(items)
print(lst_1)
print("")

# Отсортированный рандомный список
lst_2 = []
for i in range(-100, 101):
    items = random.randint(-100, 101) #- получение случайных чисел
    lst_2.append(items) 
    # Cортировка
    for i in range(len(lst_2)):
        for j in range (len(lst_2)-i-1):
            if lst_2[j] > lst_2[j+1]:
                lst_2[j], lst_2[j+1] = lst_2[j+1], lst_2[j]

print(lst_2)
print("")

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

# а) неповторяющиеся элементы исходного списка:
lst_3 = [1, 2, 4, 5, 6, 2, 5, 2]
lst_3_new = []

lst_set = set(lst_3)
lst_3_new = list(lst_set)
print(lst_3_new)

#*************************************************
lst_3 = [1, 2, 4, 5, 6, 2, 5, 2]
lst_3_new = []
lst_set = set(lst_3)

for i in lst_set:
    lst_3_new.append(i)

print(lst_3_new)
print("")

# б) элементы исходного списка, которые не имеют повторений:
lst1 = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = []
print ("lst1 = ", lst1)

for i in lst1:
    n = lst1.count(i)
    if n == 1:
        lst2.append(i)

print ("lst2 = ", lst2)
